// Generated by CoffeeScript 1.6.3
(function() {
  var SimPop, template;

  template = $("#simPop-template").html();

  SimPop = (function() {
    function SimPop(title, content, width, height) {
      var $box;
      $box = $("<div class='simPop'></div>");
      $box.html(template);
      $box.find(".title").html(title);
      $box.find(".content").html(content);
      $box.css({
        height: height,
        width: width,
        top: Math.max(($(window).height() - height) / 2, 10),
        left: Math.max(($(window).width() - width) / 2, 10)
      });
      $box.find(".close-button").click(this.remove.bind(this));
      $box.find(".header").on("mousedown", this.mousedown.bind(this));
      $("body").on("mousemove", this.mousemove.bind(this));
      $box.find(".header").on("mouseup", this.mouseup.bind(this));
      $("body").append($box);
      this.$box = $box;
    }

    SimPop.prototype.remove = function() {
      return this.$box.remove();
    };

    SimPop.prototype.mousedown = function(e) {
      e.preventDefault();
      this.initDrag = {
        x: e.clientX - this.$box.offset().left,
        y: e.clientY - this.$box.offset().top
      };
      return this.isDragging = true;
    };

    SimPop.prototype.mousemove = function(e) {
      if (this.isDragging) {
        return this.$box.css({
          left: e.clientX - this.initDrag.x,
          top: e.clientY - this.initDrag.y
        });
      }
    };

    SimPop.prototype.find = function(el) {
      return this.$box.find(el);
    };

    SimPop.prototype.mouseleave = function() {
      return this.isDragging = false;
    };

    SimPop.prototype.mouseup = function() {
      return this.isDragging = false;
    };

    return SimPop;

  })();

  this.simPop = function(title, content, width, height) {
    return new SimPop(title, content, width, height);
  };

}).call(this);

/*
//@ sourceMappingURL=simPop.map
*/
