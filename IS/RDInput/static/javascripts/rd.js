// Generated by CoffeeScript 1.6.3
(function() {
  var displayIncidents, getIncidentByInitialId, incidentListTemplate, incidentTemplate, initialIdMap, loadIncidents;

  this.incidents = [];

  initialIdMap = {};

  loadIncidents = function() {
    var self;
    self = this;
    return $.ajax({
      url: "/incident",
      data: {
        rd: window['rd']
      },
      dataType: "json",
      success: function(ret) {
        var incident, incidents, _i, _len;
        console.log(ret);
        if (ret.hasOwnProperty("data")) {
          self.incidents = ret["data"];
          incidents = ret["data"];
          for (_i = 0, _len = incidents.length; _i < _len; _i++) {
            incident = incidents[_i];
            initialIdMap[incident['initialId']] = incident;
          }
          return displayIncidents();
        }
      }
    });
  };

  incidentListTemplate = _.template($("#incident-list-template").html());

  displayIncidents = function() {
    var html, incident, incidentDisplay, incidentDisplayList, location, locations, strLocation, _i, _j, _len, _len1;
    incidentDisplayList = [];
    for (_i = 0, _len = incidents.length; _i < _len; _i++) {
      incident = incidents[_i];
      incidentDisplay = {};
      if (incident['initialId'] === null) {
        incidentDisplay['id'] = incident['_id'];
      } else {
        incidentDisplay['id'] = incident['initialId'];
      }
      locations = incident['location'];
      strLocation = "";
      for (_j = 0, _len1 = locations.length; _j < _len1; _j++) {
        location = locations[_j];
        if (location['type'] === 'string') {
          strLocation = location['location'];
        }
        if (location['type'] === 'region') {
          strLocation = "Region " + location['regions'][0];
        }
      }
      strLocation += " " + incident['remark'];
      incidentDisplay['strLocation'] = strLocation;
      incidentDisplayList.push(incidentDisplay);
    }
    html = incidentListTemplate({
      incidents: incidentDisplayList
    });
    return $("#incident-list").html(html);
  };

  getIncidentByInitialId = function(initialId, callback) {
    return $.ajax({
      url: "/incidentByInitialId",
      dataType: "json",
      type: "post",
      data: {
        initialId: initialId
      },
      success: function(ret) {
        console.log(ret);
        return callback(ret["data"][0]);
      }
    });
  };

  this.completeIncident = function(initialId) {
    return $.ajax({
      url: "/completeIncident",
      data: {
        initialId: initialId,
        completeTime: Date.now()
      },
      type: "post",
      success: function(ret) {
        console.log(ret);
        alert(ret);
        return window.location.reload();
      }
    });
  };

  incidentTemplate = _.template($("#incident-display-template").html());

  this.updateIncident = function(initialId) {
    var html, incident, location, pop, _i, _len, _ref;
    incident = initialIdMap[initialId];
    _ref = incident['location'];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      location = _ref[_i];
      if (location['type'] === 'gps') {
        incident['gps-location'] = location;
      } else if (location['type'] === 'string') {
        incident['string-location'] = location;
      }
    }
    html = incidentTemplate({
      incident: incident
    });
    pop = simPop("Update incident", html, 500, 500);
    return pop.find(".btn-update").on('click', function() {
      var data;
      data = pop.find('form').serialize();
      return $.ajax({
        url: "/updateIncident",
        data: data,
        type: "post",
        success: function(ret) {
          alert(ret);
          return window.location.reload();
        }
      });
    });
  };

  $(document).ready(function() {
    return loadIncidents();
  });

}).call(this);

/*
//@ sourceMappingURL=rd.map
*/
